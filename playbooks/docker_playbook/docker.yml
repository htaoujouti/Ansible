---
- hosts: linux
  become: yes
  vars_files:
    - vars/default.yml

  tasks:
  - name: install git
    apt:
      name: git
      state: present
      update_cache: yes
  - name: Install aptitude using apt
    apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

  - name: Install required system packages for Docker
    apt: name={{ docker_required_packages }} state=latest update_cache=yes

  - name: Add Docker GPG key
    apt_key:
      url: "{{ docker_gpg_url }}"
      state: present

  - name: Add Docker repository
    apt_repository:
      repo: "{{ docker_repo }}"
      state: present

  - name: Install Docker
    apt: name={{ docker_packges }} state=latest update_cache=yes

  - name: Install Python Docker module
    pip:
      name: docker

  - name: Add adminstrator to docker group
    user:
      name: "{{ admin_user }}"
      groups: docker
      append: yes

  - name: Check current docker-compose version.
    command: docker-compose --version
    register: docker_compose_vsn
    changed_when: false
    failed_when: false
    check_mode: no

  - set_fact:
      docker_compose_current_version: "{{ docker_compose_vsn.stdout | regex_search('(\\d+(\\.\\d+)+)') }}"
    when:
      - docker_compose_vsn.stdout is defined

  - name: Install or upgrade docker-compose
    get_url: 
      url : "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"
      dest: /usr/local/bin/docker-compose
      mode: 'a+x'
      force: yes
    when: >
      docker_compose_current_version is not defined
      or docker_compose_current_version is version(docker_compose_version, '<')
  - name: Run and enable docker
    service:
      name: docker
      state: started
      enabled: true